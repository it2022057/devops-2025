services:

  # MariaDB database service
  db:
    restart: always
    image: mariadb:10.2.44 # 10.2.44 has less high severity vulnerabilities than latest versions
    expose:
      - 3306
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root12345   # Root user password
      - MYSQL_USER=myuser               # Custom DB user
      - MYSQL_PASSWORD=pass12345        # Password for the custom user
      - MYSQL_DATABASE=mariadb          # Name of the database to create
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u myuser -ppass12345"]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - 'db-data:/var/lib/mysql'
      - ./assets/mariadb:/docker-entrypoint-initdb.d # Custom SQL script to insert starter data to the database

  # Mailhog service for email testing
  mailhog:
    image: mailhog
    build:
      context: .
      dockerfile: mailhog.Dockerfile # Custom Dockerfile for building the mailhog image
    restart: always
    ports:
      - "8025:8025"  # Web UI
      - "1025:1025"  # SMTP
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 8025"]
      interval: 30s
      timeout: 30s
      retries: 3

  # MinIO service for object storage
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    restart: always
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # MinIO Console
    environment:
      - MINIO_ROOT_USER=Q3AM3UQ867SPQQA43P2F                              # Username
      - MINIO_ROOT_PASSWORD=zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG      # Password
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/ready"]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - minio-data:/data

  # Main Spring Boot application service
  spring:
    restart: always
    image: main-app
    build:
      context: ./ds-project-2024
      dockerfile: Dockerfile # Custom Dockerfile for building the app image
    ports:
      - "8080:8080"
    depends_on: # Ensures that all the other components are healthy before starting
      db:
        condition: service_healthy
      mailhog:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      # Database config
      - SPRING_DATASOURCE_URL=jdbc:mariadb://db:3306/mariadb
      - SPRING_DATASOURCE_USERNAME=myuser
      - SPRING_DATASOURCE_PASSWORD=pass12345
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MariaDBDialect
      # Mail config for using MailHog
      - SPRING_MAIL_HOST=mailhog
      - SPRING_MAIL_PORT=1025
      - SPRING_MAIL_USERNAME=noreply.springboot21@gmail.com
      - SPRING_MAIL_PASSWORD=no-password-needed
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH=false
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE=false
      # MinIO config for object storage
      - MINIO_URL=http://minio:9000
      - MINIO_ACCESS_NAME=Q3AM3UQ867SPQQA43P2F
      - MINIO_ACCESS_SECRET=zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG
      - MINIO_BUCKET_NAME=pet-adoption-app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 30s
      retries: 3

  # Nginx reverse proxy for the Spring Boot application
  web:
    image: nginx:alpine # Use a specific version of Nginx that has fewer vulnerabilities
    restart: always
    volumes:
      - ./assets/nginx/nginx.conf:/etc/nginx/nginx.conf:ro # Custom Nginx configuration with read-only access
    ports:
      - "80:80"
    depends_on:
      spring:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 30s
      retries: 3

volumes:
  db-data: # Volume to persist database data
  minio-data: # Volume to persist MinIO objects